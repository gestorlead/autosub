#!/bin/bash
set -e

echo "üöÄ Iniciando o AutoSub..."

# Verificar se as vari√°veis de ambiente est√£o configuradas
if [ -z "$DB_HOST" ] || [ -z "$DB_PORT" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASSWORD" ] || [ -z "$DB_NAME" ]; then
  echo "‚ùå Erro: Vari√°veis de ambiente do banco de dados n√£o configuradas corretamente."
  echo "Por favor, configure as vari√°veis DB_HOST, DB_PORT, DB_USER, DB_PASSWORD e DB_NAME."
  exit 1
fi

# Exibir as vari√°veis de ambiente usadas (sem mostrar a senha)
echo "Vari√°veis de ambiente do banco de dados:"
echo "DB_HOST=${DB_HOST}"
echo "DB_PORT=${DB_PORT}"
echo "DB_NAME=${DB_NAME}"
echo "DB_USER=${DB_USER}"

# Fun√ß√£o para verificar se o banco de dados est√° acess√≠vel
function check_database() {
  echo "‚è≥ Aguardando conex√£o com o banco de dados..."
  
  for i in {1..30}; do
    if pg_isready -h "${DB_HOST}" -p "${DB_PORT}" -U "${DB_USER}"; then
      echo "‚úÖ Conex√£o com o servidor PostgreSQL estabelecida!"
      
      # Verificar se o banco de dados existe
      if PGPASSWORD="${DB_PASSWORD}" psql -h "${DB_HOST}" -p "${DB_PORT}" -U "${DB_USER}" -lqt | cut -d \| -f 1 | grep -qw "${DB_NAME}"; then
        echo "‚úÖ Banco de dados '${DB_NAME}' existe e est√° acess√≠vel."
        return 0
      else
        echo "‚ùå Erro: O banco de dados '${DB_NAME}' n√£o existe."
        echo "Por favor, crie o banco de dados manualmente usando o comando:"
        echo "CREATE DATABASE ${DB_NAME};"
        return 1
      fi
    fi
    echo "‚è≥ Tentativa $i/30. Tentando novamente em 2 segundos..."
    sleep 2
  done
  
  echo "‚ùå N√£o foi poss√≠vel conectar ao banco de dados. Tempo limite excedido."
  return 1
}

# Verifica se o banco de dados est√° acess√≠vel
if ! check_database; then
  echo "‚ùå Erro de conex√£o com o banco de dados. Verifique as configura√ß√µes e garanta que o banco '${DB_NAME}' exista."
  exit 1
fi

# Executando migra√ß√µes do banco de dados via Python
echo "üîÑ Verificando e atualizando tabelas do banco de dados..."
python -m src.migrations.migrations

# Iniciando a aplica√ß√£o
echo "üåü Iniciando o servidor Gunicorn..."
exec gunicorn app:app --bind 0.0.0.0:5000 --timeout 300 --workers 2 